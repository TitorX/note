定界符
	对正则表达式的范围进行界定
	PHP中
		/正则/
		[正则]
		#正则#
		|正则|
		{正则}
		!正则!
原子
	原子是正则表达式匹配的最小单位通常是unicode编码表中某一个字符
	可见原子
		Unicode编码表中用键盘输出后肉眼可见的字符
		诸如
			标点 ,.'"
			字母 a-z A-Z 0-9
			汉字、日文
			数理化公式符号 ∝∑∪∏ 等
			其他可见字符
	不可见原子
		Unicode编码表中用键盘输出后肉眼看不见得字符
		比如
			换行符 \n
			回车 \r
			制表符
			空格
	使用转义符进行某些特殊原子的匹配
		\\ 匹配 \
		\n 匹配 换行

元字符
	定义原子的筛选方式
	定义原子的集合，将某一类原子进行归类、缩写，简化正则表达式的书写方式

	原子的筛选方式
		| 匹配两个或多个分支选择
			Dir|dir|DIR 匹配Dir或者dir或者DIR
		[] 匹配方括号中的任意一个原子
			[789] 匹配7或8或9
		[^] 匹配除方括号中的原子之外的任意字符
			[^789] 匹配7或8或9之外的所有字符
			注：[^789] 中的 ^ 必须出现在最开始 如[7^89]会匹配7或^或8或9四个字符

	原子的集合
		. 匹配除换行符之外的任意字符 [^\n]
		\d 匹配任意一个十进制数字 [0-9]
		\D 匹配任意一个非十进制数字 [^0-9]
		\s 匹配一个不可见原子 [\f\n\r\t\v]
		\S 匹配一个可见原子 [^\f\n\r\t\v]
		\w 匹配任意一个数字、字母或下划线 [0-9a-zA-Z_]
		\W 匹配任意一个非数字、字母或下划线 [^0-9a-zA-Z_]


量词
	查找某一个原子活着原子的集合连续出现多少次
	{n} 表示其前面的原子恰好出现n次
	{n,}表示其前面的原子最少出现n次
	{n,m} 表示其前面的原子最少出现n次，最多出现m次
	* 匹配0次、1次或者多次其之前的原子 {0,}
	+ 匹配1次或者多次其之前的原子 {1,}
	? 匹配0次或者1次其之前的原子 {0,1}
	例：
		5{3} 数字5连续出现三次 如 555
		[a-zA-Z]{2} 两个英文字母连续出现在一起 如 ak bc
		\w{4} 连续出现4次数字、字母或下划线的情况 如 4a3_
		\w{4,} 至少连续出现4次数字、字母或下划线的情况
		\w{4,8} 出现4次到8次数字、字母或下划线的情况


边界控制
	^ 匹配字符串开始的位置
		^K 匹配以K开头的字符串
	$ 匹配字符串结尾的位置
		Q$ 匹配以Q结尾的字符串

模式单元
	() 匹配其中的整体为一个原子
		(D|d)uang~ 匹配Duang~以及duang~


修正模式
	给正则表达式的匹配过程指定一种匹配模式
	默认采用贪婪模式
	贪婪匹配
		匹配结果存在歧义时取其长
	懒惰匹配
		匹配结果存在歧义时取其短
	忽略英文大小写
	忽略空白(空格、制表符)
	使.匹配包括换行符在内的所有字符

几个实例
	非空
		.+
		此处\n除外 .匹配\n之外的所有原子
	浮点数匹配
		\d+\.\d{n}$
		匹配保留n位小数的浮点数
	手机号(大陆)
		1[34578]\d{9}
	Email地址
		^\w+(\.\w+)*@\w+(\.\w+)+$
	URL地址匹配
		^(https?://)?(\w+\.)+[a-zA-Z]+$

