# Nginx

user www-data;			# 运行用户
worker_processes 1;		# 启动进程数,通常设置成和cpu的数量相等
pid /run/nginx.pid;		# pid文件存储位置

# 全局错误日志
error_log /var/log/nginx/error.log;

# 工作模式以及连接上限
events {
	# 单个后台worker process进程的最大并发连接数
	worker_connections 1000;
	# 并发总数 = worker_process * worker_connections

	# epoll是多路复用IO(I/O Multiplexing)中的一种方式
	# 仅用于linux2.6以上内核 可以大大提高nginx的性能
	use epoll;
}

# 设定http服务器
http {

	############################################################################
	##
	# 基本设置
	##

	# 指定nginx是否调用sendfile函数(zero copy方式)来输出文件
	# 对于普通应用设置为on
	# 对于IO重负荷应用可设置为off
	sendfile on;

	# 这两个参数决定了操作系统如何处理网络缓存
	# 和他们何时将这些缓存输出到最终用户(客户端). 
	tcp_nopush on;
	tcp_nodelay on;

	# 连接超时时间
	keepalive_timeout 65;
	
	# types_hash_max_size影响散列表的冲突率
	# types_hash_max_size越大 就会消耗更多的内存
	# 但散列key的冲突率会降低 检索速度就更快
	types_hash_max_size 2048;

	# 包含一个文件描述:不同文件后缀对应的mime
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# 设定缓冲请求
	# client_header_buffer_size 128K;
	# large_client_header_buffers 4 128K;

	# 开启目录列表访问 适合下载服务器 默认关闭
	# autoindex on;
	############################################################################
	##
	# 日志设置
	##

	access_log /var/log/nginx/http_access.log;
	error_log /var/log/nginx/http_error.log;

	############################################################################
	##
	# gzip设置
	##
	
	# 启用gzip压缩功能
	# 增加cpu负荷 减少网络传输量
	# 默认仅对text/html进行压缩
	gzip on;

	# 为指定的客户端禁用gzip功能
	# gzip_disable "mise6" 设置对于IE6或者更低的版本禁用gzip
	gzip_disable "mise6";
	
	# 对指定类型的文件使用gzip压缩
	gzip_types text/plain text/css application/json text/javascript;

	# nginx做前端代理时启用该选项
	# 表示无论后端服务器的headers头返回什么信息 都无条件启用压缩
	# gzip_proxied any;

	# 最小压缩的页面
	# 如果页面过于小 可能会越压越大 以b为单位
	# 如 gzip_min_length 1024; 规定仅对大于1KB的文件进行压缩
	gzip_min_length 1024;

	# 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流
	# 如 gzip_buffers 4 8K; 按照原始数据大小以8K为单位的4倍申请内存
	# gzip_buffers 4 8K;

	# 压缩级别
	# 1-9 级别越高压缩效果越好 消耗CPU性能越多
	# 建议设置为 3
	# gzip_comp_level 3;

	############################################################################
	##
	# 虚拟主机设置
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;


}
