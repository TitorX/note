# Nginx

user www-data;			# 运行用户
worker_process 1;		# 启动进程数,通常设置成和cpu的数量相等
pid /run/nginx.pid		# pid文件存储位置

# 全局错误日志
error_log /var/log/nginx/error.log

# 工作模式以及连接上限
events {
	# 单个后台worker process进程的最大并发连接数
	worker_connections 1000;
	# 并发总数 = worker_process * worker_connections

	# epoll是多路复用IO(I/O Multiplexing)中的一种方式
	# 仅用于linux2.6以上内核 可以大大提高nginx的性能
	user epoll;
}

# 设定http服务器
http {

	############################################################################
	##
	# 基本设置
	##

	# 指定nginx是否调用sendfile函数(zero copy方式)来输出文件
	# 对于普通应用设置为on
	# 对于IO重负荷应用可设置为off
	sendfile on;


	tcp_nopush on;
	tcp_nodelay on;

	# 连接超时时间
	keepalive_timeout 65;
	
	types_hash_max_size 2048;

	# 包含一个文件描述:不同文件后缀对应的mime
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# 设定缓冲请求
	# client_header_buffer_size 128K;
	# large_client_header_buffers 4 128K;

	############################################################################
	##
	# 日志设置
	##

	access_log /var/log/nginx/http_access.log;
	error_log /var/log/nginx/http_error.log;

	############################################################################
	##
	# gzip设置
	##

	gzip on;
	gzip_disable "mise6";

	############################################################################
	##
	# 虚拟主机设置
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;


}